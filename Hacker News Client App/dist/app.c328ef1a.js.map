{"version":3,"sources":["app.js"],"names":["ajax","XMLHttpRequest","content","document","createElement","NEWS_URL","CONTENT_URL","container","getElementById","getData","url","open","send","JSON","parse","response","newsFeed","newsList","push","i","length","id","title","comments_count","innerHTML","join","newsDetail","location","hash","substring","newsContents","replace","router","routePath","window","addEventListener"],"mappings":"AAAA,IAAMA,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB;AACA,IAAMC,SAAS,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,MAAxB,CAAlB,EAEA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpBV,EAAAA,IAAI,CAACW,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB,EADoB,CACU;;AAC9BV,EAAAA,IAAI,CAACY,IAAL,GAFoB,CAIpB;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,QAAhB,CAAP;AACD,EAED;;;AACA,SAASC,QAAT,GAAoB;AAClB,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMD,QAAQ,GAAGP,OAAO,CAACJ,QAAD,CAAxB;AAEAY,EAAAA,QAAQ,CAACC,IAAT,CAAc,MAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCF,IAAAA,QAAQ,CAACC,IAAT,yCAEcF,QAAQ,CAACG,CAAD,CAAR,CAAYE,EAF1B,0BAGML,QAAQ,CAACG,CAAD,CAAR,CAAYG,KAHlB,eAG4BN,QAAQ,CAACG,CAAD,CAAR,CAAYI,cAHxC;AAOD;;AACDN,EAAAA,QAAQ,CAACC,IAAT,CAAc,OAAd;AACAX,EAAAA,SAAS,CAACiB,SAAV,GAAsBP,QAAQ,CAACQ,IAAT,CAAc,EAAd,CAAtB;AACD,EAED;;;AACA,SAASC,UAAT,GAAsB;AACpB,MAAML,EAAE,GAAGM,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwB,CAAxB,CAAX;AACA,MAAMC,YAAY,GAAGrB,OAAO,CAACH,WAAW,CAACyB,OAAZ,CAAoB,KAApB,EAA2BV,EAA3B,CAAD,CAA5B;AACAd,EAAAA,SAAS,CAACiB,SAAV,uBACQM,YAAY,CAACR,KADrB;AAOD,EAED;;;AACA,SAASU,MAAT,GAAkB;AAChB,MAAMC,SAAS,GAAGN,QAAQ,CAACC,IAA3B,CADgB,CAEhB;;AAEA,MAAIK,SAAS,KAAK,EAAlB,EAAsB;AACpBjB,IAAAA,QAAQ;AACT,GAFD,MAEO;AACLU,IAAAA,UAAU;AACX;AACF;;AAEDQ,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCH,MAAtC;AACAA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const ajax = new XMLHttpRequest();\r\nconst content = document.createElement(\"div\");\r\nconst NEWS_URL = \"https://api.hnpwa.com/v0/news/1.json\";\r\nconst CONTENT_URL = \"https://api.hnpwa.com/v0/item/@id.json\";\r\nconst container = document.getElementById(\"root\");\r\n\r\n// 리팩토링-중복되는 코드를 함수로 묶기\r\nfunction getData(url) {\r\n  ajax.open(\"GET\", url, false); // 동기적으로 가져옴\r\n  ajax.send();\r\n\r\n  // JSON.parse-json 응답값을 객체로 바꾸기\r\n  return JSON.parse(ajax.response);\r\n}\r\n\r\n// 글 목록을 불러오는 함수 만들기\r\nfunction newsFeed() {\r\n  const newsList = [];\r\n  const newsFeed = getData(NEWS_URL);\r\n\r\n  newsList.push(\"<ul>\");\r\n  for (let i = 0; i < newsFeed.length; i++) {\r\n    newsList.push(`\r\n     <li>\r\n      <a href=\"#${newsFeed[i].id}\">\r\n        ${newsFeed[i].title} (${newsFeed[i].comments_count})\r\n      </a>\r\n     </li>\r\n    `);\r\n  }\r\n  newsList.push(\"</ul>\");\r\n  container.innerHTML = newsList.join(\"\");\r\n}\r\n\r\n// 글 내용을 띄워주는 함수\r\nfunction newsDetail() {\r\n  const id = location.hash.substring(1);\r\n  const newsContents = getData(CONTENT_URL.replace(\"@id\", id));\r\n  container.innerHTML = `\r\n    <h1>${newsContents.title}</h1>\r\n    \r\n    <div>\r\n      <a href=\"#\">목록으로</a>\r\n    </div>\r\n  `;\r\n}\r\n\r\n// 라우터 만들기\r\nfunction router() {\r\n  const routePath = location.hash;\r\n  // 참고로, location.hash에 #만 들어있으면 ''를 반환한다.\r\n\r\n  if (routePath === \"\") {\r\n    newsFeed();\r\n  } else {\r\n    newsDetail();\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"hashchange\", router);\r\nrouter();\r\n"]}